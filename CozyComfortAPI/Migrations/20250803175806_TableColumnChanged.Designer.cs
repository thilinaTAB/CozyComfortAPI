// <auto-generated />
using CozyComfortAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CozyComfortAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250803175806_TableColumnChanged")]
    partial class TableColumnChanged
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlanketModelOrder", b =>
                {
                    b.Property<int>("BlanketModelsModelID")
                        .HasColumnType("int");

                    b.Property<int>("OrdersOrderID")
                        .HasColumnType("int");

                    b.HasKey("BlanketModelsModelID", "OrdersOrderID");

                    b.HasIndex("OrdersOrderID");

                    b.ToTable("BlanketModelOrder");
                });

            modelBuilder.Entity("CozyComfortAPI.Model.BlanketModel", b =>
                {
                    b.Property<int>("ModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialID")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ModelID");

                    b.HasIndex("MaterialID");

                    b.ToTable("BlanketModels");
                });

            modelBuilder.Entity("CozyComfortAPI.Model.Distributor", b =>
                {
                    b.Property<int>("DistributorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistributorID"));

                    b.Property<string>("DistributorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistributorID");

                    b.ToTable("Distributors");
                });

            modelBuilder.Entity("CozyComfortAPI.Model.DistributorStock", b =>
                {
                    b.Property<int>("DistributorStockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistributorStockID"));

                    b.Property<int>("DistributorID")
                        .HasColumnType("int");

                    b.Property<int>("Inventory")
                        .HasColumnType("int");

                    b.Property<int>("ModelID")
                        .HasColumnType("int");

                    b.HasKey("DistributorStockID");

                    b.HasIndex("DistributorID");

                    b.HasIndex("ModelID");

                    b.ToTable("DistributorStocks");
                });

            modelBuilder.Entity("CozyComfortAPI.Model.Material", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialID");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            MaterialID = 1,
                            Description = "100% organic cotton",
                            MaterialName = "Cotton"
                        },
                        new
                        {
                            MaterialID = 2,
                            Description = "Soft merino wool",
                            MaterialName = "Wool"
                        },
                        new
                        {
                            MaterialID = 3,
                            Description = "Warm polyester fleece",
                            MaterialName = "Fleece"
                        },
                        new
                        {
                            MaterialID = 4,
                            Description = "Eco-friendly bamboo fiber",
                            MaterialName = "Bamboo"
                        },
                        new
                        {
                            MaterialID = 5,
                            Description = "Luxurious cashmere wool",
                            MaterialName = "Cashmere"
                        },
                        new
                        {
                            MaterialID = 6,
                            Description = "Soft chenille fabric",
                            MaterialName = "Chenille"
                        });
                });

            modelBuilder.Entity("CozyComfortAPI.Model.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("ByDistributorDistributorID")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderID");

                    b.HasIndex("ByDistributorDistributorID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BlanketModelOrder", b =>
                {
                    b.HasOne("CozyComfortAPI.Model.BlanketModel", null)
                        .WithMany()
                        .HasForeignKey("BlanketModelsModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CozyComfortAPI.Model.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CozyComfortAPI.Model.BlanketModel", b =>
                {
                    b.HasOne("CozyComfortAPI.Model.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CozyComfortAPI.Model.DistributorStock", b =>
                {
                    b.HasOne("CozyComfortAPI.Model.Distributor", "Distributor")
                        .WithMany("DistributorStocks")
                        .HasForeignKey("DistributorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CozyComfortAPI.Model.BlanketModel", "BlanketModel")
                        .WithMany("DistributorStocks")
                        .HasForeignKey("ModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlanketModel");

                    b.Navigation("Distributor");
                });

            modelBuilder.Entity("CozyComfortAPI.Model.Order", b =>
                {
                    b.HasOne("CozyComfortAPI.Model.Distributor", "ByDistributor")
                        .WithMany("Orders")
                        .HasForeignKey("ByDistributorDistributorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ByDistributor");
                });

            modelBuilder.Entity("CozyComfortAPI.Model.BlanketModel", b =>
                {
                    b.Navigation("DistributorStocks");
                });

            modelBuilder.Entity("CozyComfortAPI.Model.Distributor", b =>
                {
                    b.Navigation("DistributorStocks");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
